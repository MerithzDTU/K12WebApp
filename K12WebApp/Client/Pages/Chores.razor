@page "/chores"
@using System.Globalization
@inject IChoreService ChoreService
@inject NavigationManager NavigationManager

<PageTitle>Tjanser</PageTitle>

<AuthorizeView>
    <NotAuthorized>

    </NotAuthorized>

    <Authorized>
        <MudContainer Class="mt-10" MaxWidth="MaxWidth.Small">
            <MudPaper Class="align-content-center rounded pa-14 mt-1" Elevation="5">
                <MudText Class="mud-typography-h4" Color="Color.Primary" Align="Align.Center">Tjanseliste</MudText>
                <div class="d-flex justify-center">
                    <MudIcon Icon="@Icons.Material.Rounded.CleaningServices" Color="Color.Primary" Style="height:30%; width:30%;" />
                </div>

                <MudGrid Class="mt-10">
                    <MudTable Items="@ChoreService.Chores" Hover="@hover">
                        <HeaderContent>
                            <MudTh>Tjans</MudTh>
                            <MudTh>Beskrivelse</MudTh>
                            <MudTh>@previousMonth</MudTh>
                            <MudTh>@currentMonth</MudTh>
                            <MudTh>@nextMonth</MudTh>
                        </HeaderContent>
                        <RowTemplate Context="chore">
                            <MudTd DataLabel="Tjans">@chore.Name</MudTd>
                            <MudTd DataLabel="Beskrivelse">@chore.Description</MudTd>
                            <MudTd DataLabel="PreviousMonth">@chore</MudTd>
                            <MudTd DataLabel="CurrentMonth">Test4</MudTd>
                            <MudTd DataLabel="NextMonth">Test5</MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudGrid>
            </MudPaper>
        </MudContainer>
    </Authorized>

</AuthorizeView>

@code {
    private string currentMonth = string.Empty;
    private string nextMonth = string.Empty;
    private string previousMonth = string.Empty;
    private bool hover = true;
    private List<ChoreMonth> choreMonths = new List<ChoreMonth>();

    protected override async Task OnInitializedAsync()
    {
        currentMonth = GetMonthName(-2);
        nextMonth = GetMonthName(-1);
        previousMonth = GetMonthName(-3);
        try
        {
            await ChoreService.GetChoreMonths();
            await ChoreService.GetChores();
            await ChoreService.GetUserChores();

            Console.WriteLine("1. linje: " + previousMonth);
            Console.WriteLine("ChoreMonthId: " + ChoreService.ChoreMonths.ElementAt(14).Id);
            Console.WriteLine("2. linje tildelte brugere: " + ChoreService.ChoreMonths.First(c => c.ChoreId == 2 && c.Name == previousMonth));
            Console.WriteLine("3. linje: " + ChoreService.ChoreMonths.Count());
            Console.WriteLine(ChoreService.ChoreMonthUsers);

        } catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }

    private string GetMonthName(int offset)
    {
        var dkCulture = System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag("da-DK");
        CultureInfo.CurrentCulture = dkCulture;
        CultureInfo.DefaultThreadCurrentUICulture = dkCulture;
        CultureInfo.DefaultThreadCurrentCulture = dkCulture;
        return DateTime.Today.AddMonths(offset).ToString("MMMM").ToLower();
    }


}

