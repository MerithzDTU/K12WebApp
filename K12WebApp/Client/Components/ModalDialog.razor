<!-- Modal -->
<div class="modal fade show" id="myModal" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header border-0" style="background-color: #212121;">
        <h5 class="modal-title">@Title</h5>
        <button type="button" class="btn-close" style="background-color: whitesmoke" @onclick="@ModalCancel"></button>
      </div>
      <div class="modal-body" style="background-color: #212121">
          <p>@Body</p>
      </div>
      <div class="modal-footer border-0" style="background-color: #212121">
                @switch (DialogType)
                {
                    case ModalDialogType.Ok:
                        <button type="button" class="btn btn-primary" @onclick="@ModalOk">Forstået</button>
                        break;
                    case ModalDialogType.OkCancel:
                        <button type="button" class="btn" @onclick="@ModalCancel">Annullér</button>
                        <button type="button" class="btn btn-primary" @onclick="@ModalOk">Forstået</button>
                        break;
                    case ModalDialogType.DeleteCancel:
                        <button type="button" class="btn btn-primary" @onclick="@ModalCancel">Annullér</button>
                        <button type="button" class="btn btn-danger" @onclick="@ModalOk">Slet</button>
                        break;
                }
      </div>
    </div>
  </div>
</div>

@code {

    [Parameter]
    public string Title { get; set; }
    [Parameter]
    public string Body { get; set; }
    [Parameter]
    public EventCallback<bool> OnClose { get; set; }
    [Parameter]
    public ModalDialogType DialogType { get; set; }

    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(false);
    }

    private Task ModalOk()
    {
        return OnClose.InvokeAsync(true);
    }

    public enum ModalDialogType
    {
        Ok,
        OkCancel,
        DeleteCancel
    }
}
