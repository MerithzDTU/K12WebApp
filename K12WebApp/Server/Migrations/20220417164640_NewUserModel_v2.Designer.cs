// <auto-generated />
using System;
using K12WebApp.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace K12WebApp.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220417164640_NewUserModel_v2")]
    partial class NewUserModel_v2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("K12WebApp.Shared.Grocery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroceryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isBought")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("Groceries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByUserId = 1,
                            DateCreated = new DateTime(2022, 4, 17, 18, 46, 39, 610, DateTimeKind.Local).AddTicks(57),
                            GroceryName = "Løg",
                            isBought = false
                        },
                        new
                        {
                            Id = 2,
                            CreatedByUserId = 1,
                            DateCreated = new DateTime(2022, 4, 17, 18, 46, 39, 610, DateTimeKind.Local).AddTicks(109),
                            GroceryName = "Hvidløg",
                            isBought = false
                        },
                        new
                        {
                            Id = 3,
                            CreatedByUserId = 1,
                            DateCreated = new DateTime(2022, 4, 17, 18, 46, 39, 610, DateTimeKind.Local).AddTicks(116),
                            GroceryName = "Affaldsposer",
                            isBought = false
                        },
                        new
                        {
                            Id = 4,
                            CreatedByUserId = 1,
                            DateCreated = new DateTime(2022, 4, 17, 18, 46, 39, 610, DateTimeKind.Local).AddTicks(121),
                            GroceryName = "Karry",
                            isBought = false
                        });
                });

            modelBuilder.Entity("K12WebApp.Shared.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Køkken Ansvarlig"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Køkken Beboer"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Tjanse Tjekker"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Køkken Kasserer"
                        });
                });

            modelBuilder.Entity("K12WebApp.Shared.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "",
                            FirstName = "Christian",
                            LastName = "Merithz Uhrenfeldt Nielsen",
                            NickName = "Krølle",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "",
                            FirstName = "Joey",
                            LastName = "Knutsson",
                            NickName = "Joey",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 3,
                            Email = "",
                            FirstName = "Emma",
                            LastName = "Rosa",
                            NickName = "Ems",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 4,
                            Email = "",
                            FirstName = "Kasper",
                            LastName = "Djælund Nyberg",
                            NickName = "Guffe",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 5,
                            Email = "",
                            FirstName = "Daniel",
                            LastName = "Katz",
                            NickName = "Danniboi",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 6,
                            Email = "",
                            FirstName = "Andreas",
                            LastName = "Ven",
                            NickName = "Venno",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 7,
                            Email = "",
                            FirstName = "Lynge",
                            LastName = "Moustgaard",
                            NickName = "LyngLyng",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 8,
                            Email = "",
                            FirstName = "Lucas",
                            LastName = "Zacho",
                            NickName = "Peter",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 9,
                            Email = "",
                            FirstName = "Nicolai",
                            LastName = "Toft",
                            NickName = "Nico",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 10,
                            Email = "",
                            FirstName = "Anastasia",
                            LastName = "Jakobsen",
                            NickName = "Anastasia",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 11,
                            Email = "",
                            FirstName = "Eva",
                            LastName = "Sand Larsen",
                            NickName = "Eva",
                            RoleId = 5
                        });
                });

            modelBuilder.Entity("K12WebApp.Shared.Grocery", b =>
                {
                    b.HasOne("K12WebApp.Shared.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("K12WebApp.Shared.User", b =>
                {
                    b.HasOne("K12WebApp.Shared.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
